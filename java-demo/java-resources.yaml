AWSTemplateFormatVersion: 2010-09-09
Transform: "AWS::Serverless-2016-10-31"
Description: |
  amazon-codeguru-sample-lambda-function
  Sample SAM Template for amazon-codeguru-sample-lambda-function

Globals:
  Function:
    Timeout: 200

Resources:
  LocationsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: location
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: location
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE

  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      Description: Role used for running Lambda function
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - "dynamodb:PutItem"
                Effect: Allow
                Resource: !GetAtt
                  - LocationsTable
                  - Arn
            Version: 2012-10-17
          PolicyName: DDBWriteAccess
      RoleName: Demo-Lambda-Execution-Role

  ProfilingDemoFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: "s3://codeguru-demo/java-app"
      Handler: "com.amazon.codeguru.lambdaprofiler.demo.App::handleRequest"
      Runtime: java11
      MemorySize: 512
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref LocationsTable
      Environment:
        Variables:
          TABLE_NAME: !Ref LocationsTable
          AWS_CODEGURU_PROFILER_GROUP_ARN: >-
            arn:aws:codeguru-profiler:us-east-1:629054680944:profilingGroup/Java-App
          AWS_CODEGURU_PROFILER_ENABLED: TRUE
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  EvnentRuleFunctionLauncher:
    Type: AWS::Events::Rule
    Properties:
      Description: "ProfilingDemoFunctionLauncher"
      ScheduleExpression: "rate(1 minute)"
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "ProfilingDemoFunction"
              - "Arn"
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref "ProfilingDemoFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "EvnentRuleFunctionLauncher"
          - "Arn"

  CodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: Java-Demo
      RepositoryDescription: Repository for CodeGuru Java demo
      Code:
        BranchName: main
        S3:
          Bucket: codeguru-demo
          Key: codeguru-java-demo.zip

  CodeGuruRepoAssociation:
    Type: AWS::CodeGuruReviewer::RepositoryAssociation
    Properties:
      Name: Java-Demo
      Type: CodeCommit

  CodeGuruProfilingGroup:
    Type: AWS::CodeGuruProfiler::ProfilingGroup
    Properties:
      ProfilingGroupName: "Java-App"
      ComputePlatform: "AWSLambda"

Outputs:
  ProfilingDemoFunction:
    Description: Lambda Function ARN
    Value: !GetAtt
      - ProfilingDemoFunction
      - Arn
  LambdaExecutionIAMRole:
    Description: IAM Role to execute Lambda function
    Value: !GetAtt
      - LambdaExecutionRole
      - Arn
  LocationsTableName:
    Description: Locations table name
    Value: !Ref LocationsTable
